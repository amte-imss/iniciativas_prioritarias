<?php

//private $data_siap = ['nombre'=>'field_nombre', 'ape_paterno'=>'field_apellido_paterno',
//    'ape_materno'=>'ape_materno',//Apellido materno
//    'emp_recurp'=>'emp_recurp',
//    'emp_keypue'=>'clave_categoria',//Clave de categoria
//    'pue_despue'=>'categoria',//Categoria
//    'delegacion'=>'delegacion',
//    'matricula'=>'matricula',
//    'fecha_ingreso'=>'fecha_ingreso',//Fecha de ingreso al imss
//    'sexo'=>'sexo',//Sexo
//    'adscripcion'=>''//Clave de anscripción 
//    'descripcion'=>''//NOmbre de la andscripción
//    'descripcion'=>'fecha_ingreso'//Fecha de ingreso
//    ];

/**
 * @param $delegacion
 * @param $matricula
 * @return bool|SimpleXMLElement
 */
/*Funciona que nos permite el cosumo del WS SIAP*/
function searchUserSIAP($delegacion, $matricula) {

  $params = [
    'Delegacion' => $delegacion,
    'Matricula' => $matricula,
    'RFC' => ''
  ];

  $client = new SoapClient("http://172.26.18.156/ServiciosWeb/wsSIED.asmx?WSDL");
  $siapResult = $client->__soapCall("ConsultaSIED", [$params]);
  $result = simplexml_load_string($siapResult->ConsultaSIEDResult->any);

  return isset($result->EMPLEADOS) ? $result->EMPLEADOS : false;
}

function pr($param){
	$result = print_r($param, true);
	echo '<pre>' . $result . '</pre>';
}

/**
 * @param type $name username o matrícula del usuario
 */

function get_employee_database($username = null, $delegacion = null){
    if(is_null($delegacion)){
        $data = db_query("SELECT * FROM {employees} WHERE matricula = :matricula", [':matricula' => $username])->fetchAssoc();
    }else{
        $data = db_query("SELECT * FROM {employees} WHERE matricula = :matricula and delegacion = :delegacion", [':matricula' => $username, ':delegacion' => $delegacion])->fetchAssoc();
    }    
//    pr($data);
    return $data;
 }

/**
 * @param $form
 * @param $form_state
 */

function imss_ws_form_validate(&$form, &$form_state) {
  $errors = form_get_errors();
  $delegacion = $form['delegacion']['#value'];
  $matricula = null;
  switch ($form['#form_id']){
      case 'user_register_form'://Valida en el registro de nuevo usuario
        $matricula = $form['account']['name']['#value'];
	$mail = $form['account']['mail']['#value'];
        if(empty($errors)){//Valida que no existan errores antes de la delegacion, es decir, "name" y "email"
            valida_usuario_registro($matricula, $delegacion, $form);
        }
          break;
      case 'user_login_block'://Valida en el login
      case 'user_login'://Valida en el login
        $matricula = $form['name']['#value'];
	$mail = $form['mail']['#value'];
        if(empty($errors)){//Valida que no existan errores antes de la delegacion, es decir, "name" y "email"
            valida_usuario_sesion($matricula, $delegacion, $form);
        }
          break;
      default :
        $matricula = null;
	$mail = null;
        $data = null;
        return 0;
  }
}

/**
 * datos de inicio de sesion
 */
function valida_usuario_sesion($matricula, $delegacion = "", &$form) {
//    switch ($delegacion){
////      case '001'://Valida usuario externo
////          break;
////      case ''://No selecciono delegación
////          break;
//      default ://Cualquier delegación
//  }
      $empleado = get_employee_database($matricula, $delegacion);
      if(empty($empleado)){//existe el usuario
          form_set_error('delegacion', t("Lo sentimos, no se encontro información del usuario $matricula con la delegación ingresada."));
      }
}

/**
 * Proceso de guardado o de registro del usuario
 */
function valida_usuario_registro($matricula, $delegacion = "", &$form) {
    switch ($delegacion){
      case '001'://Valida usuario externo
          break;
      case ''://No selecciono delegación
          break;
      default ://Cualquier delegación diferente a las opciones anteriores 
        $empleado = get_employee_database($matricula);
        $employee = searchUserSIAP($delegacion, $matricula);//Busca al usuario en SIAP
        if (!empty($employee) && is_object($employee)) {//SI lo encuentra, intentara guardar la información
                $result = db_insert("employees")->fields([
                  'matricula' => $matricula,
                  'delegacion' => $delegacion,
                  'nombre' => $employee->NOMBRE,
                  'ape_paterno' => $employee->APE_PATERNO,
                  'ape_materno' => $employee->APE_MATERNO,
                  'emp_regims' => $employee->EMP_REGIMS,
                  'emp_recurp' => $employee->EMP_RECURP,
                  'emp_keypue' => $employee->EMP_KEYPUE,
                  'pue_despue' => $employee->PUE_DESPUE,
                  'emp_status' => $employee->EMP_STATUS,
                  'rfc' => $employee->RFC,
                  'sexo' => $employee->SEXO,
                  'fecha_ingreso' => DateTime::createFromFormat("d/m/Y", $employee->FECHAINGRESO)->format("Y-m-d"),
                  'antiguedad' => $employee->ANTIGUEDAD,
                  'adscripcion' => $employee->ADSCRIPCION,
                  'descripcion' => $employee->DESCRIPCION,
                  'correo' => $employee->CORREO,
                  'created_at' => date('Y-m-d H:i:s')
                ])->execute();
        }else{
            form_set_error('delegacion', t("Lo sentimos, no se encontro información del usuario $matricula con la delegación ingresada."));
        }
    }
}


/**
 * @param array $data
 * @return array
 */
function parseValues($data = []) {
  $items = [];
  foreach($data as $item) {
    $items[$item->clave] = $item->nombre;
  }
	//pr($items);
  return $items;
}

/**
 * Modifica Información de la vista de información del usuario
 */
function imss_ws_user_view($account) {
    $result_data = get_employee_database($account->name);
    if(is_array($result_data)  && !empty($result_data)){//Valida que exista información
        $data_siap = get_field_structure();
        foreach ($data_siap as $key => $val) {
            $value = $val['field_drupal'];
            $label = $val['label'][LANGUAGE_TYPE_INTERFACE][$account->{LANGUAGE_TYPE_INTERFACE}];
            if(!isset($account->content[$value])){
                $account->content[$value]['#title']= $label;
                $account->content[$value]['#field_name']= $value;
                $account->content[$value]['#theme']= 'field';
                $account->content[$value]['#items'][]= [];
                $account->content[$value][0]['#markup']= $result_data[$key];
                //No necesarias para que aparezca la información
        //        $account->content[$value]['#weight']= 0;
        //        $account->content[$value]['#access']= 1;
        //        $account->content[$value]['#language']= $account->{LANGUAGE_TYPE_INTERFACE};
        //        $account->content[$value]['#field_type']= 'text';
        //        $account->content[$value]['#formatter']= 'text_default';
        //        $account->content[$value]['#view_mode']= 'full';
        //        $account->content[$value]['#label_display']= 'above';
        //        $account->content[$value]['#entity_type']= 'user';
        //        $account->content[$value]['#bundle']= 'user';
        //        $account->content[$value]['#field_translatable']= 1;
            }
        }
    }
}

/**
 * Implements hook_form_alter()
 * @param $form
 * @param $form_state
 * @param $form_id
 * @return mixed
 */

function imss_ws_form_alter(&$form, &$form_state, $form_id) {
  $input_delegacion = $form_state['input']['delegacion'];
  switch ($form_id){
      case 'user_login_block':
      case 'user_login':
          $resultDelegaciones = db_query("SELECT clave,nombre FROM {delegaciones}")->fetchAllAssoc('clave');
        if (!$resultDelegaciones) {
          $resultDelegaciones = [];
        }
        //$form['account']['name']['#title'] = "Matrícula";
        $form['delegacion_options'] = [
          '#type' => 'value',
          '#value' => parseValues($resultDelegaciones)
        ];

        $form['delegacion'] = [
          '#type' => 'select',
          '#title' => t('Delegación'),
          '#description' => t('Delegación a la que se encuentra adscrita'),
          '#required' => true,
          '#sorted' => 1,
          '#options' => $form['delegacion_options']['#value']
        ];
        $form['#validate'][] = 'imss_ws_form_validate';
        $empleado = get_employee_database($form_state['input']['name']);
//        pr($empleado);
//        pr($input_delegacion);
        if($input_delegacion == '001' && empty($empleado)){//Elimina validación de la delegacion
//            pr('entro');
            $form['delegacion']['#required'] = false;
            $encontro = array_keys($form['#validate'], 'imss_ws_form_validate');
            if(!empty($encontro)){
                unset($form['#validate'][$encontro[0]]);//Elimina la balidacion`para las condiciones
            }
        }
          break;
      case 'user_register_form':
        $resultDelegaciones = db_query("SELECT clave,nombre FROM {delegaciones}")->fetchAllAssoc('clave');
        if (!$resultDelegaciones) {
          $resultDelegaciones = [];
        }
        //$form['account']['name']['#title'] = "Matrícula";
        $form['delegacion_options'] = [
          '#type' => 'value',
          '#value' => parseValues($resultDelegaciones)
        ];

        $form['delegacion'] = [
          '#type' => 'select',
          '#title' => t('Delegación'),
          '#description' => t('Delegación a la que se encuentra adscrita'),
          '#required' => true,
          '#sorted' => 1,
          '#options' => $form['delegacion_options']['#value']
        ];
        if($input_delegacion != '001'){//Elimina validación de la delegacion
            $form['delegacion']['#required'] = false;
            $form['#validate'][] = 'imss_ws_form_validate';
        }
      break;
      case 'user_profile_form':
        load_data_account($form, $form_state, $form_id);
      break;
  }
  return $form;
}

function  get_field_structure(){//Estructura de relación entre tabla empleados y nombre de los campos del formulario de perfil
   return [
           'nombre'=>['field_drupal'=>'field_nombre','label'=>['language' => ['es' => 'Nombre','und' => 'Nombre']]], 
           'ape_paterno'=>['field_drupal'=>'field_apallido_paterno', 'label' => ['language'=>['es' => 'Apellido paterno', 'und' => 'Apellido paterno']]],
           'ape_materno'=>['field_drupal'=>'field_apellido_materno', 'label' => ['language'=>['es' => 'Apellido materno', 'und' => 'Apellido materno']]],
           'matricula'=>['field_drupal'=>'field_matr_cula', 'label' => ['language'=>['es' => 'Matrícula', 'und' => 'Matrícula']]],
           'emp_keypue'=>['field_drupal'=>'field_clave_categoria', 'label' => ['language'=>['es' => 'Clave de categoría', 'und' => 'Clave de categoría']]],
           'pue_despue'=>['field_drupal'=>'field_categoria', 'label' => ['language'=>['es' => 'Categoría', 'und' => 'Categoría']]],
           'adscripcion'=>['field_drupal'=>'field_clave_adscripcion', 'label' => ['language'=>['es' => 'Clave de adscripción', 'und' => 'Clave de adscripción']]],
           'descripcion'=>['field_drupal'=>'field_field_adscripcion', 'label' => ['language'=>['es' => 'Adscripción', 'und' => 'Adscripción']]],
           'sexo'=>['field_drupal'=>'field_sexo', 'label' => ['language'=>['es' => 'Sexo', 'und' => 'Sexo']]],
           'fecha_ingreso'=>['field_drupal'=>'field_fecha_ingreso', 'label' => ['language'=>['es' => 'Fecha de ingreso', 'und' => 'Fecha de ingreso']]],
    ];
}

/**
 * Modifica o agrga el texto de los campos de la tabla employee en el 
 * formulario de edición de la cuenta o perfil
 */
function load_data_account(&$form, &$form_state, $form_id) {
    $data_siap = get_field_structure();
    $result_data = get_employee_database($form['#user']->name);
    if(!empty($result_data)){//Ver carga de información de la base de datos de empleado
        foreach ($data_siap as $key => $val) {
                $value = $val['field_drupal'];
                $form[$value][$form[$value]['#'.LANGUAGE_TYPE_INTERFACE]][0]['value']['#default_value'] = $result_data[$key];//Modifica el texto default del componente
        }
    }
}

function imss_ws_schema() {
  $schema['employees'] = [
    'description' => t('Stores employees data.'),
    'fields' => [
      'eid' => [
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'description' => "The primary key",
      ],
      'nombre' => [
        'description' => 'El nombre del empleado.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => false
      ],
      'ape_paterno' => [
        'description' => 'Apellido paterno del empleado.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => false
      ],
      'ape_materno' => [
        'description' => 'Apellido materno del empleado.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => false
      ],
      'emp_regims' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => false
      ],
      'emp_recurp' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => false
      ],
      'emp_keypue' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => false
      ],
      'pue_despue' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => false
      ],
      'emp_status' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => false
      ],
      'delegacion' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => false
      ],
      'matricula' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => false
      ],
      'rfc' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => false
      ],
      'sexo' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => false
      ],
      'fecha_ingreso' => [
        'type' => 'varchar',
        'mysql_type' => 'date',
        'not null' => false
      ],
      'antiguedad' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => false
      ],
      'adscripcion' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => false
      ],
      'descripcion' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => false
      ],
      'correo' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => false
      ],
      'created_at' => [
        'type' => 'varchar',
        'mysql_type' => 'datetime',
        'not null' => true
      ]
    ],
    'primary key' => ['eid'],
  ];

  return $schema;
}
